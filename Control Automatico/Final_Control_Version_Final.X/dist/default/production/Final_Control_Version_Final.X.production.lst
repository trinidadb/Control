

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Apr 28 22:19:28 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35  0000                     
    36                           ; Version 2.31
    37                           ; Generated 13/10/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4620 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	idataCOMRAM
    73  0016F6                     __pidataCOMRAM:
    74                           	callstack 0
    75                           
    76                           ;initializer for _num_as_string
    77  0016F6  00                 	db	0
    78  0016F7  00                 	db	0
    79  0016F8  00                 	db	0
    80  0016F9  00                 	db	0
    81  0016FA  0D                 	db	13
    82  0016FB  0A                 	db	10
    83  0016FC  00                 	db	0
    84  0000                     _PIE1bits	set	3997
    85  0000                     _TMR0H	set	4055
    86  0000                     _TMR0L	set	4054
    87  0000                     _T0CONbits	set	4053
    88  0000                     _ADCON2bits	set	4032
    89  0000                     _ADCON1bits	set	4033
    90  0000                     _TRISCbits	set	3988
    91  0000                     _TRISAbits	set	3986
    92  0000                     _ADRESL	set	4035
    93  0000                     _ADRESH	set	4036
    94  0000                     _ADCON0bits	set	4034
    95  0000                     _INTCONbits	set	4082
    96  0000                     _TXREG	set	4013
    97  0000                     _RCREG	set	4014
    98  0000                     _SPBRG	set	4015
    99  0000                     _RCIF	set	31989
   100  0000                     _TRMT	set	32097
   101  0000                     _TXEN	set	32101
   102  0000                     _CREN	set	32092
   103  0000                     _TRISC6	set	31910
   104  0000                     _TRISC7	set	31911
   105  0000                     _SPEN	set	32095
   106  0000                     _SYNC	set	32100
   107  0000                     _BRGH	set	32098
   108                           
   109                           	psect	smallconst
   110  001000                     __psmallconst:
   111                           	callstack 0
   112  001000  00                 	db	0
   113  001001                     STR_2:
   114  001001  43                 	db	67	;'C'
   115  001002  6F                 	db	111	;'o'
   116  001003  6D                 	db	109	;'m'
   117  001004  69                 	db	105	;'i'
   118  001005  65                 	db	101	;'e'
   119  001006  6E                 	db	110	;'n'
   120  001007  7A                 	db	122	;'z'
   121  001008  61                 	db	97	;'a'
   122  001009  20                 	db	32
   123  00100A  6C                 	db	108	;'l'
   124  00100B  61                 	db	97	;'a'
   125  00100C  20                 	db	32
   126  00100D  72                 	db	114	;'r'
   127  00100E  75                 	db	117	;'u'
   128  00100F  74                 	db	116	;'t'
   129  001010  69                 	db	105	;'i'
   130  001011  6E                 	db	110	;'n'
   131  001012  61                 	db	97	;'a'
   132  001013  20                 	db	32
   133  001014  64                 	db	100	;'d'
   134  001015  65                 	db	101	;'e'
   135  001016  20                 	db	32
   136  001017  69                 	db	105	;'i'
   137  001018  6E                 	db	110	;'n'
   138  001019  74                 	db	116	;'t'
   139  00101A  65                 	db	101	;'e'
   140  00101B  72                 	db	114	;'r'
   141  00101C  72                 	db	114	;'r'
   142  00101D  75                 	db	117	;'u'
   143  00101E  70                 	db	112	;'p'
   144  00101F  63                 	db	99	;'c'
   145  001020  69                 	db	105	;'i'
   146  001021  6F                 	db	111	;'o'
   147  001022  6E                 	db	110	;'n'
   148  001023  2E                 	db	46
   149  001024  2E                 	db	46
   150  001025  2E                 	db	46
   151  001026  0D                 	db	13
   152  001027  0A                 	db	10
   153  001028  00                 	db	0
   154  001029                     STR_1:
   155  001029  53                 	db	83	;'S'
   156  00102A  74                 	db	116	;'t'
   157  00102B  61                 	db	97	;'a'
   158  00102C  72                 	db	114	;'r'
   159  00102D  74                 	db	116	;'t'
   160  00102E  69                 	db	105	;'i'
   161  00102F  6E                 	db	110	;'n'
   162  001030  67                 	db	103	;'g'
   163  001031  20                 	db	32
   164  001032  64                 	db	100	;'d'
   165  001033  65                 	db	101	;'e'
   166  001034  76                 	db	118	;'v'
   167  001035  69                 	db	105	;'i'
   168  001036  63                 	db	99	;'c'
   169  001037  65                 	db	101	;'e'
   170  001038  2E                 	db	46
   171  001039  2E                 	db	46
   172  00103A  2E                 	db	46
   173  00103B  20                 	db	32
   174  00103C  0D                 	db	13
   175  00103D  0A                 	db	10
   176  00103E  00                 	db	0
   177  00103F  00                 	db	0	; dummy byte at the end
   178  0000                     
   179                           ; #config settings
   180                           
   181                           	psect	cinit
   182  001648                     __pcinit:
   183                           	callstack 0
   184  001648                     start_initialization:
   185                           	callstack 0
   186  001648                     __initialization:
   187                           	callstack 0
   188                           
   189                           ; Initialize objects allocated to COMRAM (7 bytes)
   190                           ; load TBLPTR registers with __pidataCOMRAM
   191  001648  0EF6               	movlw	low __pidataCOMRAM
   192  00164A  6EF6               	movwf	tblptrl,c
   193  00164C  0E16               	movlw	high __pidataCOMRAM
   194  00164E  6EF7               	movwf	tblptrh,c
   195  001650  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   196  001652  6EF8               	movwf	tblptru,c
   197  001654  EE00  F050         	lfsr	0,__pdataCOMRAM
   198  001658  EE10 F007          	lfsr	1,7
   199  00165C                     copy_data0:
   200  00165C  0009               	tblrd		*+
   201  00165E  CFF5 FFEE          	movff	tablat,postinc0
   202  001662  50E5               	movf	postdec1,w,c
   203  001664  50E1               	movf	fsr1l,w,c
   204  001666  E1FA               	bnz	copy_data0
   205                           
   206                           ; Clear objects allocated to COMRAM (27 bytes)
   207  001668  EE00  F035         	lfsr	0,__pbssCOMRAM
   208  00166C  0E1B               	movlw	27
   209  00166E                     clear_0:
   210  00166E  6AEE               	clrf	postinc0,c
   211  001670  06E8               	decf	wreg,f,c
   212  001672  E1FD               	bnz	clear_0
   213  001674                     end_of_initialization:
   214                           	callstack 0
   215  001674                     __end_of__initialization:
   216                           	callstack 0
   217  001674  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   218  001676  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   219  001678  0E00               	movlw	low (__Lmediumconst shr (0+16))
   220  00167A  6EF8               	movwf	tblptru,c
   221  00167C  0100               	movlb	0
   222  00167E  EFF8  F00A         	goto	_main	;jump to C main() function
   223                           
   224                           	psect	bssCOMRAM
   225  000035                     __pbssCOMRAM:
   226                           	callstack 0
   227  000035                     _string:
   228                           	callstack 0
   229  000035                     	ds	25
   230  00004E                     _val:
   231                           	callstack 0
   232  00004E                     	ds	2
   233                           
   234                           	psect	dataCOMRAM
   235  000050                     __pdataCOMRAM:
   236                           	callstack 0
   237  000050                     _num_as_string:
   238                           	callstack 0
   239  000050                     	ds	7
   240                           
   241                           	psect	cstackCOMRAM
   242  000001                     __pcstackCOMRAM:
   243                           	callstack 0
   244  000001                     ?___awmod:
   245                           	callstack 0
   246  000001                     i2UART_Write@data:
   247                           	callstack 0
   248  000001                     ___awmod@dividend:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0x0
   252  000001                     	ds	1
   253  000002                     i2UART_Write_Text@text:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0x1
   257  000002                     	ds	1
   258  000003                     ___awmod@divisor:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x2
   262  000003                     	ds	1
   263  000004                     ??i2_UART_Write_Text:
   264                           
   265                           ; 1 bytes @ 0x3
   266  000004                     	ds	1
   267  000005                     ___awmod@counter:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0x4
   271  000005                     	ds	1
   272  000006                     ___awmod@sign:
   273                           	callstack 0
   274  000006                     i2UART_Write_Text@i:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x5
   278  000006                     	ds	1
   279  000007                     ?___awdiv:
   280                           	callstack 0
   281  000007                     ___awdiv@dividend:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0x6
   285  000007                     	ds	2
   286  000009                     ___awdiv@divisor:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0x8
   290  000009                     	ds	2
   291  00000B                     ___awdiv@counter:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0xA
   295  00000B                     	ds	1
   296  00000C                     ___awdiv@sign:
   297                           	callstack 0
   298                           
   299                           ; 1 bytes @ 0xB
   300  00000C                     	ds	1
   301  00000D                     ___awdiv@quotient:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0xC
   305  00000D                     	ds	2
   306  00000F                     int_2_str@num:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0xE
   310  00000F                     	ds	2
   311  000011                     ??_ISR:
   312                           
   313                           ; 1 bytes @ 0x10
   314  000011                     	ds	8
   315  000019                     ?___aldiv:
   316                           	callstack 0
   317  000019                     UART_Write@data:
   318                           	callstack 0
   319  000019                     ___aldiv@dividend:
   320                           	callstack 0
   321                           
   322                           ; 4 bytes @ 0x18
   323  000019                     	ds	1
   324  00001A                     UART_Write_Text@text:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x19
   328  00001A                     	ds	2
   329  00001C                     ??_UART_Write_Text:
   330                           
   331                           ; 1 bytes @ 0x1B
   332  00001C                     	ds	1
   333  00001D                     ___aldiv@divisor:
   334                           	callstack 0
   335                           
   336                           ; 4 bytes @ 0x1C
   337  00001D                     	ds	1
   338  00001E                     UART_Write_Text@i:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x1D
   342  00001E                     	ds	3
   343  000021                     ___aldiv@counter:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x20
   347  000021                     	ds	1
   348  000022                     ___aldiv@sign:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x21
   352  000022                     	ds	1
   353  000023                     ___aldiv@quotient:
   354                           	callstack 0
   355                           
   356                           ; 4 bytes @ 0x22
   357  000023                     	ds	4
   358  000027                     UART_Init@baudrate:
   359                           	callstack 0
   360                           
   361                           ; 4 bytes @ 0x26
   362  000027                     	ds	4
   363  00002B                     ??_UART_Init:
   364                           
   365                           ; 1 bytes @ 0x2A
   366  00002B                     	ds	8
   367  000033                     UART_Init@x:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x32
   371  000033                     	ds	2
   372  000035                     
   373                           ; 1 bytes @ 0x34
   374 ;;
   375 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   376 ;;
   377 ;; *************** function _main *****************
   378 ;; Defined at:
   379 ;;		line 39 in file "main.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   397 ;;Total ram usage:        0 bytes
   398 ;; Hardware stack levels required when called:    5
   399 ;; This function calls:
   400 ;;		_ADC_configurar
   401 ;;		_PORT_configurar
   402 ;;		_TMR0_configurar
   403 ;;		_UART_Init
   404 ;;		_UART_Write_Text
   405 ;;		_initialize_TMR0
   406 ;;		_turn_on_ADC
   407 ;;		_turn_on_TMR0
   408 ;; This function is called by:
   409 ;;		Startup code after reset
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413                           	psect	text0
   414  0015F0                     __ptext0:
   415                           	callstack 0
   416  0015F0                     _main:
   417                           	callstack 26
   418  0015F0                     
   419                           ;main.c: 40:     PORT_configurar();
   420  0015F0  EC77  F00B         	call	_PORT_configurar	;wreg free
   421  0015F4                     
   422                           ;main.c: 41:     UART_Init(9600);
   423  0015F4  0E80               	movlw	128
   424  0015F6  6E27               	movwf	UART_Init@baudrate^0,c
   425  0015F8  0E25               	movlw	37
   426  0015FA  6E28               	movwf	(UART_Init@baudrate+1)^0,c
   427  0015FC  0E00               	movlw	0
   428  0015FE  6E29               	movwf	(UART_Init@baudrate+2)^0,c
   429  001600  0E00               	movlw	0
   430  001602  6E2A               	movwf	(UART_Init@baudrate+3)^0,c
   431  001604  EC20  F008         	call	_UART_Init	;wreg free
   432  001608                     
   433                           ;main.c: 42:     UART_Write_Text("Starting device... \r\n");
   434  001608  0E29               	movlw	low STR_1
   435  00160A  6E1A               	movwf	UART_Write_Text@text^0,c
   436  00160C  0E10               	movlw	high STR_1
   437  00160E  6E1B               	movwf	(UART_Write_Text@text+1)^0,c
   438  001610  EC3B  F00A         	call	_UART_Write_Text	;wreg free
   439  001614                     
   440                           ;main.c: 43:     TMR0_configurar();
   441  001614  EC67  F00B         	call	_TMR0_configurar	;wreg free
   442  001618                     
   443                           ;main.c: 44:     initialize_TMR0();
   444  001618  EC6D  F00B         	call	_initialize_TMR0	;wreg free
   445  00161C                     
   446                           ;main.c: 45:     ADC_configurar();
   447  00161C  EC41  F00B         	call	_ADC_configurar	;wreg free
   448  001620                     
   449                           ;main.c: 46:     turn_on_ADC();
   450  001620  EC81  F00B         	call	_turn_on_ADC	;wreg free
   451  001624                     
   452                           ;main.c: 47:     turn_on_TMR0();
   453  001624  EC7F  F00B         	call	_turn_on_TMR0	;wreg free
   454  001628                     
   455                           ;main.c: 48:     UART_Write_Text("Comienza la rutina de interrupcion...\r\n");
   456  001628  0E01               	movlw	low STR_2
   457  00162A  6E1A               	movwf	UART_Write_Text@text^0,c
   458  00162C  0E10               	movlw	high STR_2
   459  00162E  6E1B               	movwf	(UART_Write_Text@text+1)^0,c
   460  001630  EC3B  F00A         	call	_UART_Write_Text	;wreg free
   461  001634                     l1233:
   462                           
   463                           ;main.c: 51:     UART_Write_Text("Starting device... \r\n");}
   464  001634  0E29               	movlw	low STR_1
   465  001636  6E1A               	movwf	UART_Write_Text@text^0,c
   466  001638  0E10               	movlw	high STR_1
   467  00163A  6E1B               	movwf	(UART_Write_Text@text+1)^0,c
   468  00163C  EC3B  F00A         	call	_UART_Write_Text	;wreg free
   469  001640  EF1A  F00B         	goto	l1233
   470  001644  EF07  F000         	goto	start
   471  001648                     __end_of_main:
   472                           	callstack 0
   473                           
   474 ;; *************** function _turn_on_TMR0 *****************
   475 ;; Defined at:
   476 ;;		line 127 in file "main.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;		None
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		None
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;Total ram usage:        0 bytes
   495 ;; Hardware stack levels used:    1
   496 ;; Hardware stack levels required when called:    3
   497 ;; This function calls:
   498 ;;		Nothing
   499 ;; This function is called by:
   500 ;;		_main
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           	psect	text1
   505  0016FE                     __ptext1:
   506                           	callstack 0
   507  0016FE                     _turn_on_TMR0:
   508                           	callstack 27
   509  0016FE                     
   510                           ;main.c: 128:     T0CONbits.TMR0ON = 1;
   511  0016FE  8ED5               	bsf	213,7,c	;volatile
   512  001700  0012               	return		;funcret
   513  001702                     __end_of_turn_on_TMR0:
   514                           	callstack 0
   515                           
   516 ;; *************** function _turn_on_ADC *****************
   517 ;; Defined at:
   518 ;;		line 108 in file "main.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;		None
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		None
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;Total ram usage:        0 bytes
   537 ;; Hardware stack levels used:    1
   538 ;; Hardware stack levels required when called:    3
   539 ;; This function calls:
   540 ;;		Nothing
   541 ;; This function is called by:
   542 ;;		_main
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           	psect	text2
   547  001702                     __ptext2:
   548                           	callstack 0
   549  001702                     _turn_on_ADC:
   550                           	callstack 27
   551  001702                     
   552                           ;main.c: 109:     ADCON0bits.ADON = 1;
   553  001702  80C2               	bsf	194,0,c	;volatile
   554  001704  0012               	return		;funcret
   555  001706                     __end_of_turn_on_ADC:
   556                           	callstack 0
   557                           
   558 ;; *************** function _initialize_TMR0 *****************
   559 ;; Defined at:
   560 ;;		line 118 in file "main.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;		None
   563 ;; Auto vars:     Size  Location     Type
   564 ;;		None
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		wreg, status,2
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   578 ;;Total ram usage:        0 bytes
   579 ;; Hardware stack levels used:    1
   580 ;; Hardware stack levels required when called:    3
   581 ;; This function calls:
   582 ;;		Nothing
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           	psect	text3
   589  0016DA                     __ptext3:
   590                           	callstack 0
   591  0016DA                     _initialize_TMR0:
   592                           	callstack 27
   593  0016DA                     
   594                           ;main.c: 124:     TMR0L = 15537 & 255;
   595  0016DA  0EB1               	movlw	177
   596  0016DC  6ED6               	movwf	214,c	;volatile
   597                           
   598                           ;main.c: 125:     TMR0H = 15537 >> 8;
   599  0016DE  0E3C               	movlw	60
   600  0016E0  6ED7               	movwf	215,c	;volatile
   601  0016E2  0012               	return		;funcret
   602  0016E4                     __end_of_initialize_TMR0:
   603                           	callstack 0
   604                           
   605 ;; *************** function _UART_Write_Text *****************
   606 ;; Defined at:
   607 ;;		line 53 in file "./UART.h"
   608 ;; Parameters:    Size  Location     Type
   609 ;;  text            2   25[COMRAM] PTR unsigned char 
   610 ;;		 -> num_as_string(7), STR_3(22), STR_2(40), STR_1(22), 
   611 ;; Auto vars:     Size  Location     Type
   612 ;;  i               2   29[COMRAM] int 
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   623 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;Total ram usage:        6 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; Hardware stack levels required when called:    4
   629 ;; This function calls:
   630 ;;		_UART_Write
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           	psect	text4
   637  001476                     __ptext4:
   638                           	callstack 0
   639  001476                     _UART_Write_Text:
   640                           	callstack 26
   641  001476                     
   642                           ;./UART.h: 53: void UART_Write_Text(char *text);./UART.h: 54: {;./UART.h: 55:   int i;;.
      +                          /UART.h: 56:   for(i=0;text[i]!='\0';i++)
   643  001476  0E00               	movlw	0
   644  001478  6E1F               	movwf	(UART_Write_Text@i+1)^0,c
   645  00147A  0E00               	movlw	0
   646  00147C  6E1E               	movwf	UART_Write_Text@i^0,c
   647  00147E  EF5C  F00A         	goto	l1203
   648  001482                     l1199:
   649                           
   650                           ;./UART.h: 57:    UART_Write(text[i]);
   651  001482  501E               	movf	UART_Write_Text@i^0,w,c
   652  001484  241A               	addwf	UART_Write_Text@text^0,w,c
   653  001486  6E1C               	movwf	??_UART_Write_Text^0,c
   654  001488  501F               	movf	(UART_Write_Text@i+1)^0,w,c
   655  00148A  201B               	addwfc	(UART_Write_Text@text+1)^0,w,c
   656  00148C  6E1D               	movwf	(??_UART_Write_Text+1)^0,c
   657  00148E  C01C  FFF6         	movff	??_UART_Write_Text,tblptrl
   658  001492  C01D  FFF7         	movff	??_UART_Write_Text+1,tblptrh
   659  001496  0E00               	movlw	low (__smallconst shr (0+16))
   660  001498  6EF8               	movwf	tblptru,c
   661  00149A  0E0F               	movlw	(high __ramtop+-1)
   662  00149C  64F7               	cpfsgt	tblptrh,c
   663  00149E  D003               	bra	u617
   664  0014A0  0008               	tblrd		*
   665  0014A2  50F5               	movf	tablat,w,c
   666  0014A4  D005               	bra	u610
   667  0014A6                     u617:
   668  0014A6  CFF6 FFE9          	movff	tblptrl,fsr0l
   669  0014AA  CFF7 FFEA          	movff	tblptrh,fsr0h
   670  0014AE  50EF               	movf	indf0,w,c
   671  0014B0                     u610:
   672  0014B0  EC51  F00B         	call	_UART_Write
   673  0014B4  4A1E               	infsnz	UART_Write_Text@i^0,f,c
   674  0014B6  2A1F               	incf	(UART_Write_Text@i+1)^0,f,c
   675  0014B8                     l1203:
   676  0014B8  501E               	movf	UART_Write_Text@i^0,w,c
   677  0014BA  241A               	addwf	UART_Write_Text@text^0,w,c
   678  0014BC  6E1C               	movwf	??_UART_Write_Text^0,c
   679  0014BE  501F               	movf	(UART_Write_Text@i+1)^0,w,c
   680  0014C0  201B               	addwfc	(UART_Write_Text@text+1)^0,w,c
   681  0014C2  6E1D               	movwf	(??_UART_Write_Text+1)^0,c
   682  0014C4  C01C  FFF6         	movff	??_UART_Write_Text,tblptrl
   683  0014C8  C01D  FFF7         	movff	??_UART_Write_Text+1,tblptrh
   684  0014CC  0E00               	movlw	low (__smallconst shr (0+16))
   685  0014CE  6EF8               	movwf	tblptru,c
   686  0014D0  0E0F               	movlw	(high __ramtop+-1)
   687  0014D2  64F7               	cpfsgt	tblptrh,c
   688  0014D4  D003               	bra	u627
   689  0014D6  0008               	tblrd		*
   690  0014D8  50F5               	movf	tablat,w,c
   691  0014DA  D005               	bra	u620
   692  0014DC                     u627:
   693  0014DC  CFF6 FFE9          	movff	tblptrl,fsr0l
   694  0014E0  CFF7 FFEA          	movff	tblptrh,fsr0h
   695  0014E4  50EF               	movf	indf0,w,c
   696  0014E6                     u620:
   697  0014E6  0900               	iorlw	0
   698  0014E8  A4D8               	btfss	status,2,c
   699  0014EA  EF79  F00A         	goto	u631
   700  0014EE  EF7B  F00A         	goto	u630
   701  0014F2                     u631:
   702  0014F2  EF41  F00A         	goto	l1199
   703  0014F6                     u630:
   704  0014F6  0012               	return		;funcret
   705  0014F8                     __end_of_UART_Write_Text:
   706                           	callstack 0
   707                           
   708 ;; *************** function _UART_Write *****************
   709 ;; Defined at:
   710 ;;		line 47 in file "./UART.h"
   711 ;; Parameters:    Size  Location     Type
   712 ;;  data            1    wreg     unsigned char 
   713 ;; Auto vars:     Size  Location     Type
   714 ;;  data            1   24[COMRAM] unsigned char 
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      void 
   717 ;; Registers used:
   718 ;;		wreg
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   727 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   728 ;;Total ram usage:        1 bytes
   729 ;; Hardware stack levels used:    1
   730 ;; Hardware stack levels required when called:    3
   731 ;; This function calls:
   732 ;;		Nothing
   733 ;; This function is called by:
   734 ;;		_UART_Write_Text
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text5
   739  0016A2                     __ptext5:
   740                           	callstack 0
   741  0016A2                     _UART_Write:
   742                           	callstack 26
   743                           
   744                           ;incstack = 0
   745                           ;UART_Write@data stored from wreg
   746  0016A2  6E19               	movwf	UART_Write@data^0,c
   747  0016A4                     l88:
   748  0016A4  A2AC               	btfss	4012,1,c	;volatile
   749  0016A6  EF57  F00B         	goto	u11
   750  0016AA  EF59  F00B         	goto	u10
   751  0016AE                     u11:
   752  0016AE  EF52  F00B         	goto	l88
   753  0016B2                     u10:
   754  0016B2                     
   755                           ;./UART.h: 50:   TXREG = data;
   756  0016B2  C019  FFAD         	movff	UART_Write@data,4013	;volatile
   757  0016B6  0012               	return		;funcret
   758  0016B8                     __end_of_UART_Write:
   759                           	callstack 0
   760                           
   761 ;; *************** function _UART_Init *****************
   762 ;; Defined at:
   763 ;;		line 1 in file "./UART.h"
   764 ;; Parameters:    Size  Location     Type
   765 ;;  baudrate        4   38[COMRAM] const long 
   766 ;; Auto vars:     Size  Location     Type
   767 ;;  x               2   50[COMRAM] unsigned int 
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      unsigned char 
   770 ;; Registers used:
   771 ;;		wreg, status,2, status,0, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   777 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   778 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   779 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   780 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;Total ram usage:       14 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; Hardware stack levels required when called:    4
   784 ;; This function calls:
   785 ;;		___aldiv
   786 ;; This function is called by:
   787 ;;		_main
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           	psect	text6
   792  001040                     __ptext6:
   793                           	callstack 0
   794  001040                     _UART_Init:
   795                           	callstack 26
   796  001040                     
   797                           ;./UART.h: 1: char UART_Init(const long int baudrate);./UART.h: 2: {;./UART.h: 3:  unsig
      +                          ned int x;;./UART.h: 4:  x = (10000000*4 - baudrate*64)/(baudrate*64);
   798  001040  C027  F02B         	movff	UART_Init@baudrate,??_UART_Init
   799  001044  C028  F02C         	movff	UART_Init@baudrate+1,??_UART_Init+1
   800  001048  C029  F02D         	movff	UART_Init@baudrate+2,??_UART_Init+2
   801  00104C  C02A  F02E         	movff	UART_Init@baudrate+3,??_UART_Init+3
   802  001050  0E06               	movlw	6
   803  001052                     u555:
   804  001052  90D8               	bcf	status,0,c
   805  001054  362B               	rlcf	??_UART_Init^0,f,c
   806  001056  362C               	rlcf	(??_UART_Init+1)^0,f,c
   807  001058  362D               	rlcf	(??_UART_Init+2)^0,f,c
   808  00105A  362E               	rlcf	(??_UART_Init+3)^0,f,c
   809  00105C  2EE8               	decfsz	wreg,f,c
   810  00105E  EF29  F008         	goto	u555
   811  001062  502B               	movf	??_UART_Init^0,w,c
   812  001064  0800               	sublw	0
   813  001066  6E19               	movwf	___aldiv@dividend^0,c
   814  001068  0E5A               	movlw	90
   815  00106A  542C               	subfwb	(??_UART_Init+1)^0,w,c
   816  00106C  6E1A               	movwf	(___aldiv@dividend+1)^0,c
   817  00106E  0E62               	movlw	98
   818  001070  542D               	subfwb	(??_UART_Init+2)^0,w,c
   819  001072  6E1B               	movwf	(___aldiv@dividend+2)^0,c
   820  001074  0E02               	movlw	2
   821  001076  542E               	subfwb	(??_UART_Init+3)^0,w,c
   822  001078  6E1C               	movwf	(___aldiv@dividend+3)^0,c
   823  00107A  C027  F02F         	movff	UART_Init@baudrate,??_UART_Init+4
   824  00107E  C028  F030         	movff	UART_Init@baudrate+1,??_UART_Init+5
   825  001082  C029  F031         	movff	UART_Init@baudrate+2,??_UART_Init+6
   826  001086  C02A  F032         	movff	UART_Init@baudrate+3,??_UART_Init+7
   827  00108A  0E06               	movlw	6
   828  00108C                     u565:
   829  00108C  90D8               	bcf	status,0,c
   830  00108E  362F               	rlcf	(??_UART_Init+4)^0,f,c
   831  001090  3630               	rlcf	(??_UART_Init+5)^0,f,c
   832  001092  3631               	rlcf	(??_UART_Init+6)^0,f,c
   833  001094  3632               	rlcf	(??_UART_Init+7)^0,f,c
   834  001096  2EE8               	decfsz	wreg,f,c
   835  001098  EF46  F008         	goto	u565
   836  00109C  C02F  F01D         	movff	??_UART_Init+4,___aldiv@divisor
   837  0010A0  C030  F01E         	movff	??_UART_Init+5,___aldiv@divisor+1
   838  0010A4  C031  F01F         	movff	??_UART_Init+6,___aldiv@divisor+2
   839  0010A8  C032  F020         	movff	??_UART_Init+7,___aldiv@divisor+3
   840  0010AC  ECB2  F008         	call	___aldiv	;wreg free
   841  0010B0  C019  F033         	movff	?___aldiv,UART_Init@x
   842  0010B4  C01A  F034         	movff	?___aldiv+1,UART_Init@x+1
   843  0010B8                     
   844                           ;./UART.h: 5:  if(x>255)
   845  0010B8  0434               	decf	(UART_Init@x+1)^0,w,c
   846  0010BA  A0D8               	btfss	status,0,c
   847  0010BC  EF62  F008         	goto	u571
   848  0010C0  EF64  F008         	goto	u570
   849  0010C4                     u571:
   850  0010C4  EFA1  F008         	goto	l1193
   851  0010C8                     u570:
   852  0010C8                     
   853                           ;./UART.h: 6:  {;./UART.h: 7:   x = (10000000*4 - baudrate*16)/(baudrate*16);
   854  0010C8  C027  F02B         	movff	UART_Init@baudrate,??_UART_Init
   855  0010CC  C028  F02C         	movff	UART_Init@baudrate+1,??_UART_Init+1
   856  0010D0  C029  F02D         	movff	UART_Init@baudrate+2,??_UART_Init+2
   857  0010D4  C02A  F02E         	movff	UART_Init@baudrate+3,??_UART_Init+3
   858  0010D8  0E04               	movlw	4
   859  0010DA                     u585:
   860  0010DA  90D8               	bcf	status,0,c
   861  0010DC  362B               	rlcf	??_UART_Init^0,f,c
   862  0010DE  362C               	rlcf	(??_UART_Init+1)^0,f,c
   863  0010E0  362D               	rlcf	(??_UART_Init+2)^0,f,c
   864  0010E2  362E               	rlcf	(??_UART_Init+3)^0,f,c
   865  0010E4  2EE8               	decfsz	wreg,f,c
   866  0010E6  EF6D  F008         	goto	u585
   867  0010EA  502B               	movf	??_UART_Init^0,w,c
   868  0010EC  0800               	sublw	0
   869  0010EE  6E19               	movwf	___aldiv@dividend^0,c
   870  0010F0  0E5A               	movlw	90
   871  0010F2  542C               	subfwb	(??_UART_Init+1)^0,w,c
   872  0010F4  6E1A               	movwf	(___aldiv@dividend+1)^0,c
   873  0010F6  0E62               	movlw	98
   874  0010F8  542D               	subfwb	(??_UART_Init+2)^0,w,c
   875  0010FA  6E1B               	movwf	(___aldiv@dividend+2)^0,c
   876  0010FC  0E02               	movlw	2
   877  0010FE  542E               	subfwb	(??_UART_Init+3)^0,w,c
   878  001100  6E1C               	movwf	(___aldiv@dividend+3)^0,c
   879  001102  C027  F02F         	movff	UART_Init@baudrate,??_UART_Init+4
   880  001106  C028  F030         	movff	UART_Init@baudrate+1,??_UART_Init+5
   881  00110A  C029  F031         	movff	UART_Init@baudrate+2,??_UART_Init+6
   882  00110E  C02A  F032         	movff	UART_Init@baudrate+3,??_UART_Init+7
   883  001112  0E04               	movlw	4
   884  001114                     u595:
   885  001114  90D8               	bcf	status,0,c
   886  001116  362F               	rlcf	(??_UART_Init+4)^0,f,c
   887  001118  3630               	rlcf	(??_UART_Init+5)^0,f,c
   888  00111A  3631               	rlcf	(??_UART_Init+6)^0,f,c
   889  00111C  3632               	rlcf	(??_UART_Init+7)^0,f,c
   890  00111E  2EE8               	decfsz	wreg,f,c
   891  001120  EF8A  F008         	goto	u595
   892  001124  C02F  F01D         	movff	??_UART_Init+4,___aldiv@divisor
   893  001128  C030  F01E         	movff	??_UART_Init+5,___aldiv@divisor+1
   894  00112C  C031  F01F         	movff	??_UART_Init+6,___aldiv@divisor+2
   895  001130  C032  F020         	movff	??_UART_Init+7,___aldiv@divisor+3
   896  001134  ECB2  F008         	call	___aldiv	;wreg free
   897  001138  C019  F033         	movff	?___aldiv,UART_Init@x
   898  00113C  C01A  F034         	movff	?___aldiv+1,UART_Init@x+1
   899  001140                     
   900                           ;./UART.h: 8:   BRGH = 1;
   901  001140  84AC               	bsf	4012,2,c	;volatile
   902  001142                     l1193:
   903                           
   904                           ;./UART.h: 10:  if(x<256)
   905  001142  0434               	decf	(UART_Init@x+1)^0,w,c
   906  001144  B0D8               	btfsc	status,0,c
   907  001146  EFA7  F008         	goto	u601
   908  00114A  EFA9  F008         	goto	u600
   909  00114E                     u601:
   910  00114E  EFB1  F008         	goto	l67
   911  001152                     u600:
   912  001152                     
   913                           ;./UART.h: 11:  {;./UART.h: 12:    SPBRG = x;
   914  001152  C033  FFAF         	movff	UART_Init@x,4015	;volatile
   915                           
   916                           ;./UART.h: 13:    SYNC = 0;
   917  001156  98AC               	bcf	4012,4,c	;volatile
   918                           
   919                           ;./UART.h: 14:    SPEN = 1;
   920  001158  8EAB               	bsf	4011,7,c	;volatile
   921                           
   922                           ;./UART.h: 15:           TRISC7 = 1;
   923  00115A  8E94               	bsf	3988,7,c	;volatile
   924                           
   925                           ;./UART.h: 16:           TRISC6 = 1;
   926  00115C  8C94               	bsf	3988,6,c	;volatile
   927                           
   928                           ;./UART.h: 17:           CREN = 1;
   929  00115E  88AB               	bsf	4011,4,c	;volatile
   930                           
   931                           ;./UART.h: 18:           TXEN = 1;
   932  001160  8AAC               	bsf	4012,5,c	;volatile
   933  001162                     l67:
   934  001162  0012               	return		;funcret
   935  001164                     __end_of_UART_Init:
   936                           	callstack 0
   937                           
   938 ;; *************** function ___aldiv *****************
   939 ;; Defined at:
   940 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aldiv.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;  dividend        4   24[COMRAM] long 
   943 ;;  divisor         4   28[COMRAM] long 
   944 ;; Auto vars:     Size  Location     Type
   945 ;;  quotient        4   34[COMRAM] long 
   946 ;;  sign            1   33[COMRAM] unsigned char 
   947 ;;  counter         1   32[COMRAM] unsigned char 
   948 ;; Return value:  Size  Location     Type
   949 ;;                  4   24[COMRAM] long 
   950 ;; Registers used:
   951 ;;		wreg, status,2, status,0
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   957 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   958 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   960 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   961 ;;Total ram usage:       14 bytes
   962 ;; Hardware stack levels used:    1
   963 ;; Hardware stack levels required when called:    3
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_UART_Init
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text7
   972  001164                     __ptext7:
   973                           	callstack 0
   974  001164                     ___aldiv:
   975                           	callstack 26
   976  001164  0E00               	movlw	0
   977  001166  6E22               	movwf	___aldiv@sign^0,c
   978  001168  BE20               	btfsc	(___aldiv@divisor+3)^0,7,c
   979  00116A  EFBB  F008         	goto	u360
   980  00116E  EFB9  F008         	goto	u361
   981  001172                     u361:
   982  001172  EFC5  F008         	goto	l1065
   983  001176                     u360:
   984  001176  1E20               	comf	(___aldiv@divisor+3)^0,f,c
   985  001178  1E1F               	comf	(___aldiv@divisor+2)^0,f,c
   986  00117A  1E1E               	comf	(___aldiv@divisor+1)^0,f,c
   987  00117C  6C1D               	negf	___aldiv@divisor^0,c
   988  00117E  0E00               	movlw	0
   989  001180  221E               	addwfc	(___aldiv@divisor+1)^0,f,c
   990  001182  221F               	addwfc	(___aldiv@divisor+2)^0,f,c
   991  001184  2220               	addwfc	(___aldiv@divisor+3)^0,f,c
   992  001186  0E01               	movlw	1
   993  001188  6E22               	movwf	___aldiv@sign^0,c
   994  00118A                     l1065:
   995  00118A  BE1C               	btfsc	(___aldiv@dividend+3)^0,7,c
   996  00118C  EFCC  F008         	goto	u370
   997  001190  EFCA  F008         	goto	u371
   998  001194                     u371:
   999  001194  EFD6  F008         	goto	l1071
  1000  001198                     u370:
  1001  001198  1E1C               	comf	(___aldiv@dividend+3)^0,f,c
  1002  00119A  1E1B               	comf	(___aldiv@dividend+2)^0,f,c
  1003  00119C  1E1A               	comf	(___aldiv@dividend+1)^0,f,c
  1004  00119E  6C19               	negf	___aldiv@dividend^0,c
  1005  0011A0  0E00               	movlw	0
  1006  0011A2  221A               	addwfc	(___aldiv@dividend+1)^0,f,c
  1007  0011A4  221B               	addwfc	(___aldiv@dividend+2)^0,f,c
  1008  0011A6  221C               	addwfc	(___aldiv@dividend+3)^0,f,c
  1009  0011A8  0E01               	movlw	1
  1010  0011AA  1A22               	xorwf	___aldiv@sign^0,f,c
  1011  0011AC                     l1071:
  1012  0011AC  0E00               	movlw	0
  1013  0011AE  6E23               	movwf	___aldiv@quotient^0,c
  1014  0011B0  0E00               	movlw	0
  1015  0011B2  6E24               	movwf	(___aldiv@quotient+1)^0,c
  1016  0011B4  0E00               	movlw	0
  1017  0011B6  6E25               	movwf	(___aldiv@quotient+2)^0,c
  1018  0011B8  0E00               	movlw	0
  1019  0011BA  6E26               	movwf	(___aldiv@quotient+3)^0,c
  1020  0011BC  501D               	movf	___aldiv@divisor^0,w,c
  1021  0011BE  101E               	iorwf	(___aldiv@divisor+1)^0,w,c
  1022  0011C0  101F               	iorwf	(___aldiv@divisor+2)^0,w,c
  1023  0011C2  1020               	iorwf	(___aldiv@divisor+3)^0,w,c
  1024  0011C4  B4D8               	btfsc	status,2,c
  1025  0011C6  EFE7  F008         	goto	u381
  1026  0011CA  EFE9  F008         	goto	u380
  1027  0011CE                     u381:
  1028  0011CE  EF1F  F009         	goto	l1093
  1029  0011D2                     u380:
  1030  0011D2  0E01               	movlw	1
  1031  0011D4  6E21               	movwf	___aldiv@counter^0,c
  1032  0011D6  EFF3  F008         	goto	l1079
  1033  0011DA                     l1077:
  1034  0011DA  90D8               	bcf	status,0,c
  1035  0011DC  361D               	rlcf	___aldiv@divisor^0,f,c
  1036  0011DE  361E               	rlcf	(___aldiv@divisor+1)^0,f,c
  1037  0011E0  361F               	rlcf	(___aldiv@divisor+2)^0,f,c
  1038  0011E2  3620               	rlcf	(___aldiv@divisor+3)^0,f,c
  1039  0011E4  2A21               	incf	___aldiv@counter^0,f,c
  1040  0011E6                     l1079:
  1041  0011E6  AE20               	btfss	(___aldiv@divisor+3)^0,7,c
  1042  0011E8  EFF8  F008         	goto	u391
  1043  0011EC  EFFA  F008         	goto	u390
  1044  0011F0                     u391:
  1045  0011F0  EFED  F008         	goto	l1077
  1046  0011F4                     u390:
  1047  0011F4                     l1081:
  1048  0011F4  90D8               	bcf	status,0,c
  1049  0011F6  3623               	rlcf	___aldiv@quotient^0,f,c
  1050  0011F8  3624               	rlcf	(___aldiv@quotient+1)^0,f,c
  1051  0011FA  3625               	rlcf	(___aldiv@quotient+2)^0,f,c
  1052  0011FC  3626               	rlcf	(___aldiv@quotient+3)^0,f,c
  1053  0011FE  501D               	movf	___aldiv@divisor^0,w,c
  1054  001200  5C19               	subwf	___aldiv@dividend^0,w,c
  1055  001202  501E               	movf	(___aldiv@divisor+1)^0,w,c
  1056  001204  581A               	subwfb	(___aldiv@dividend+1)^0,w,c
  1057  001206  501F               	movf	(___aldiv@divisor+2)^0,w,c
  1058  001208  581B               	subwfb	(___aldiv@dividend+2)^0,w,c
  1059  00120A  5020               	movf	(___aldiv@divisor+3)^0,w,c
  1060  00120C  581C               	subwfb	(___aldiv@dividend+3)^0,w,c
  1061  00120E  A0D8               	btfss	status,0,c
  1062  001210  EF0C  F009         	goto	u401
  1063  001214  EF0E  F009         	goto	u400
  1064  001218                     u401:
  1065  001218  EF17  F009         	goto	l1089
  1066  00121C                     u400:
  1067  00121C  501D               	movf	___aldiv@divisor^0,w,c
  1068  00121E  5E19               	subwf	___aldiv@dividend^0,f,c
  1069  001220  501E               	movf	(___aldiv@divisor+1)^0,w,c
  1070  001222  5A1A               	subwfb	(___aldiv@dividend+1)^0,f,c
  1071  001224  501F               	movf	(___aldiv@divisor+2)^0,w,c
  1072  001226  5A1B               	subwfb	(___aldiv@dividend+2)^0,f,c
  1073  001228  5020               	movf	(___aldiv@divisor+3)^0,w,c
  1074  00122A  5A1C               	subwfb	(___aldiv@dividend+3)^0,f,c
  1075  00122C  8023               	bsf	___aldiv@quotient^0,0,c
  1076  00122E                     l1089:
  1077  00122E  90D8               	bcf	status,0,c
  1078  001230  3220               	rrcf	(___aldiv@divisor+3)^0,f,c
  1079  001232  321F               	rrcf	(___aldiv@divisor+2)^0,f,c
  1080  001234  321E               	rrcf	(___aldiv@divisor+1)^0,f,c
  1081  001236  321D               	rrcf	___aldiv@divisor^0,f,c
  1082  001238  2E21               	decfsz	___aldiv@counter^0,f,c
  1083  00123A  EFFA  F008         	goto	l1081
  1084  00123E                     l1093:
  1085  00123E  5022               	movf	___aldiv@sign^0,w,c
  1086  001240  B4D8               	btfsc	status,2,c
  1087  001242  EF25  F009         	goto	u411
  1088  001246  EF27  F009         	goto	u410
  1089  00124A                     u411:
  1090  00124A  EF2F  F009         	goto	l1097
  1091  00124E                     u410:
  1092  00124E  1E26               	comf	(___aldiv@quotient+3)^0,f,c
  1093  001250  1E25               	comf	(___aldiv@quotient+2)^0,f,c
  1094  001252  1E24               	comf	(___aldiv@quotient+1)^0,f,c
  1095  001254  6C23               	negf	___aldiv@quotient^0,c
  1096  001256  0E00               	movlw	0
  1097  001258  2224               	addwfc	(___aldiv@quotient+1)^0,f,c
  1098  00125A  2225               	addwfc	(___aldiv@quotient+2)^0,f,c
  1099  00125C  2226               	addwfc	(___aldiv@quotient+3)^0,f,c
  1100  00125E                     l1097:
  1101  00125E  C023  F019         	movff	___aldiv@quotient,?___aldiv
  1102  001262  C024  F01A         	movff	___aldiv@quotient+1,?___aldiv+1
  1103  001266  C025  F01B         	movff	___aldiv@quotient+2,?___aldiv+2
  1104  00126A  C026  F01C         	movff	___aldiv@quotient+3,?___aldiv+3
  1105  00126E  0012               	return		;funcret
  1106  001270                     __end_of___aldiv:
  1107                           	callstack 0
  1108                           
  1109 ;; *************** function _TMR0_configurar *****************
  1110 ;; Defined at:
  1111 ;;		line 112 in file "main.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;		None
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;		None
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg, status,2
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1129 ;;Total ram usage:        0 bytes
  1130 ;; Hardware stack levels used:    1
  1131 ;; Hardware stack levels required when called:    3
  1132 ;; This function calls:
  1133 ;;		Nothing
  1134 ;; This function is called by:
  1135 ;;		_main
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text8
  1140  0016CE                     __ptext8:
  1141                           	callstack 0
  1142  0016CE                     _TMR0_configurar:
  1143                           	callstack 27
  1144  0016CE                     
  1145                           ;main.c: 113:     T0CONbits.T08BIT = 0;
  1146  0016CE  9CD5               	bcf	213,6,c	;volatile
  1147                           
  1148                           ;main.c: 114:     T0CONbits.T0CS = 0;
  1149  0016D0  9AD5               	bcf	213,5,c	;volatile
  1150                           
  1151                           ;main.c: 115:     T0CONbits.PSA = 0;
  1152  0016D2  96D5               	bcf	213,3,c	;volatile
  1153  0016D4                     
  1154                           ;main.c: 116:     T0CONbits.T0PS = 0;
  1155  0016D4  0EF8               	movlw	-8
  1156  0016D6  16D5               	andwf	213,f,c	;volatile
  1157  0016D8  0012               	return		;funcret
  1158  0016DA                     __end_of_TMR0_configurar:
  1159                           	callstack 0
  1160                           
  1161 ;; *************** function _PORT_configurar *****************
  1162 ;; Defined at:
  1163 ;;		line 81 in file "main.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;		None
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		None
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;Total ram usage:        0 bytes
  1182 ;; Hardware stack levels used:    1
  1183 ;; Hardware stack levels required when called:    3
  1184 ;; This function calls:
  1185 ;;		Nothing
  1186 ;; This function is called by:
  1187 ;;		_main
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           	psect	text9
  1192  0016EE                     __ptext9:
  1193                           	callstack 0
  1194  0016EE                     _PORT_configurar:
  1195                           	callstack 27
  1196  0016EE                     
  1197                           ;main.c: 82:     TRISAbits.RA0 = 1;
  1198  0016EE  8092               	bsf	146,0,c	;volatile
  1199                           
  1200                           ;main.c: 83:     TRISCbits.RC7 = 1;
  1201  0016F0  8E94               	bsf	148,7,c	;volatile
  1202                           
  1203                           ;main.c: 84:     TRISCbits.RC6 = 0;
  1204  0016F2  9C94               	bcf	148,6,c	;volatile
  1205  0016F4  0012               	return		;funcret
  1206  0016F6                     __end_of_PORT_configurar:
  1207                           	callstack 0
  1208                           
  1209 ;; *************** function _ADC_configurar *****************
  1210 ;; Defined at:
  1211 ;;		line 86 in file "main.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;		None
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;		None
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg, status,2
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1229 ;;Total ram usage:        0 bytes
  1230 ;; Hardware stack levels used:    1
  1231 ;; Hardware stack levels required when called:    3
  1232 ;; This function calls:
  1233 ;;		Nothing
  1234 ;; This function is called by:
  1235 ;;		_main
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           	psect	text10
  1240  001682                     __ptext10:
  1241                           	callstack 0
  1242  001682                     _ADC_configurar:
  1243                           	callstack 27
  1244  001682                     
  1245                           ;main.c: 87:     ADCON0bits.CHS = 0;
  1246  001682  0EC3               	movlw	-61
  1247  001684  16C2               	andwf	194,f,c	;volatile
  1248  001686                     
  1249                           ;main.c: 88:     ADCON1bits.VCFG0 = 0;
  1250  001686  98C1               	bcf	193,4,c	;volatile
  1251  001688                     
  1252                           ;main.c: 92:     ADCON1bits.VCFG1 = 0;
  1253  001688  9AC1               	bcf	193,5,c	;volatile
  1254                           
  1255                           ;main.c: 96:     ADCON1bits.PCFG = 0b1000;
  1256  00168A  50C1               	movf	193,w,c	;volatile
  1257  00168C  0BF0               	andlw	-16
  1258  00168E  0908               	iorlw	8
  1259  001690  6EC1               	movwf	193,c	;volatile
  1260  001692                     
  1261                           ;main.c: 98:     ADCON2bits.ADFM = 1;
  1262  001692  8EC0               	bsf	192,7,c	;volatile
  1263                           
  1264                           ;main.c: 99:     ADCON2bits.ACQT = 0b111;
  1265  001694  0E38               	movlw	56
  1266  001696  12C0               	iorwf	192,f,c	;volatile
  1267                           
  1268                           ;main.c: 104:     ADCON2bits.ADCS = 0b010;
  1269  001698  50C0               	movf	192,w,c	;volatile
  1270  00169A  0BF8               	andlw	-8
  1271  00169C  0902               	iorlw	2
  1272  00169E  6EC0               	movwf	192,c	;volatile
  1273  0016A0  0012               	return		;funcret
  1274  0016A2                     __end_of_ADC_configurar:
  1275                           	callstack 0
  1276                           
  1277 ;; *************** function _ISR *****************
  1278 ;; Defined at:
  1279 ;;		line 56 in file "main.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;		None
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;		None
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;Total ram usage:        8 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    2
  1300 ;; This function calls:
  1301 ;;		_int_2_str
  1302 ;;		i2_UART_Write_Text
  1303 ;;		i2_initialize_TMR0
  1304 ;; This function is called by:
  1305 ;;		Interrupt level 2
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	intcode
  1310  000008                     __pintcode:
  1311                           	callstack 0
  1312  000008                     _ISR:
  1313                           	callstack 26
  1314                           
  1315                           ;incstack = 0
  1316  000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1317  00000A  EDBD  F00A         	call	int_func,f	;refresh shadow registers
  1318                           
  1319                           	psect	intcode_body
  1320  00157A                     __pintcode_body:
  1321                           	callstack 26
  1322  00157A                     int_func:
  1323                           	callstack 26
  1324  00157A  0006               	pop		; remove dummy address from shadow register refresh
  1325  00157C  CFE9 F013          	movff	fsr0l,??_ISR+2
  1326  001580  CFEA F014          	movff	fsr0h,??_ISR+3
  1327  001584  CFF6 F015          	movff	tblptrl,??_ISR+4
  1328  001588  CFF7 F016          	movff	tblptrh,??_ISR+5
  1329  00158C  CFF8 F017          	movff	tblptru,??_ISR+6
  1330  001590  CFF5 F018          	movff	tablat,??_ISR+7
  1331  001594                     
  1332                           ;main.c: 57:     INTCONbits.GIE=0;
  1333  001594  9EF2               	bcf	242,7,c	;volatile
  1334  001596                     
  1335                           ;main.c: 58:     initialize_TMR0();
  1336  001596  EC72  F00B         	call	i2_initialize_TMR0	;wreg free
  1337  00159A                     
  1338                           ;main.c: 59:     ADCON0bits.GO_nDONE=1;
  1339  00159A  82C2               	bsf	194,1,c	;volatile
  1340  00159C                     i2l116:
  1341  00159C  B2C2               	btfsc	194,1,c	;volatile
  1342  00159E  EFD3  F00A         	goto	i2u67_41
  1343  0015A2  EFD5  F00A         	goto	i2u67_40
  1344  0015A6                     i2u67_41:
  1345  0015A6  EFCE  F00A         	goto	i2l116
  1346  0015AA                     i2u67_40:
  1347  0015AA                     
  1348                           ;main.c: 63:     int_2_str(((ADRESH*256) | (ADRESL)));
  1349  0015AA  50C3               	movf	195,w,c	;volatile
  1350  0015AC  CFC4 F011          	movff	4036,??_ISR	;volatile
  1351  0015B0  6A12               	clrf	(??_ISR+1)^0,c
  1352  0015B2  C011  F012         	movff	??_ISR,??_ISR+1
  1353  0015B6  6A11               	clrf	??_ISR^0,c
  1354  0015B8  1011               	iorwf	??_ISR^0,w,c
  1355  0015BA  6E0F               	movwf	int_2_str@num^0,c
  1356  0015BC  5012               	movf	(??_ISR+1)^0,w,c
  1357  0015BE  6E10               	movwf	(int_2_str@num+1)^0,c
  1358  0015C0  ECF2  F009         	call	_int_2_str	;wreg free
  1359  0015C4                     
  1360                           ;main.c: 64:     UART_Write_Text(num_as_string);
  1361  0015C4  0E50               	movlw	low _num_as_string
  1362  0015C6  6E02               	movwf	i2UART_Write_Text@text^0,c
  1363  0015C8  0E00               	movlw	high _num_as_string
  1364  0015CA  6E03               	movwf	(i2UART_Write_Text@text+1)^0,c
  1365  0015CC  EC7C  F00A         	call	i2_UART_Write_Text	;wreg free
  1366  0015D0                     
  1367                           ;main.c: 65:     INTCONbits.TMR0IF = 0;
  1368  0015D0  94F2               	bcf	242,2,c	;volatile
  1369  0015D2                     
  1370                           ;main.c: 66:     INTCONbits.GIE = 1;
  1371  0015D2  8EF2               	bsf	242,7,c	;volatile
  1372  0015D4  C018  FFF5         	movff	??_ISR+7,tablat
  1373  0015D8  C017  FFF8         	movff	??_ISR+6,tblptru
  1374  0015DC  C016  FFF7         	movff	??_ISR+5,tblptrh
  1375  0015E0  C015  FFF6         	movff	??_ISR+4,tblptrl
  1376  0015E4  C014  FFEA         	movff	??_ISR+3,fsr0h
  1377  0015E8  C013  FFE9         	movff	??_ISR+2,fsr0l
  1378  0015EC  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1379  0015EE  0011               	retfie		f
  1380  0015F0                     __end_of_ISR:
  1381                           	callstack 0
  1382                           
  1383 ;; *************** function i2_initialize_TMR0 *****************
  1384 ;; Defined at:
  1385 ;;		line 118 in file "main.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;Total ram usage:        0 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; This function calls:
  1406 ;;		Nothing
  1407 ;; This function is called by:
  1408 ;;		_ISR
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text12
  1413  0016E4                     __ptext12:
  1414                           	callstack 0
  1415  0016E4                     i2_initialize_TMR0:
  1416                           	callstack 27
  1417  0016E4                     
  1418                           ;main.c: 124:     TMR0L = 15537 & 255;
  1419  0016E4  0EB1               	movlw	177
  1420  0016E6  6ED6               	movwf	214,c	;volatile
  1421                           
  1422                           ;main.c: 125:     TMR0H = 15537 >> 8;
  1423  0016E8  0E3C               	movlw	60
  1424  0016EA  6ED7               	movwf	215,c	;volatile
  1425  0016EC  0012               	return		;funcret
  1426  0016EE                     __end_ofi2_initialize_TMR0:
  1427                           	callstack 0
  1428                           
  1429 ;; *************** function i2_UART_Write_Text *****************
  1430 ;; Defined at:
  1431 ;;		line 53 in file "./UART.h"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  text            2    1[COMRAM] PTR unsigned char 
  1434 ;;		 -> num_as_string(7), STR_3(22), STR_2(40), STR_1(22), 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  i               2    5[COMRAM] int 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1450 ;;Total ram usage:        6 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    1
  1453 ;; This function calls:
  1454 ;;		i2_UART_Write
  1455 ;; This function is called by:
  1456 ;;		_ISR
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text13
  1461  0014F8                     __ptext13:
  1462                           	callstack 0
  1463  0014F8                     i2_UART_Write_Text:
  1464                           	callstack 26
  1465  0014F8                     
  1466                           ;./UART.h: 53: void UART_Write_Text(char *text);./UART.h: 54: {;./UART.h: 55:   int i;;.
      +                          /UART.h: 56:   for(i=0;text[i]!='\0';i++)
  1467  0014F8  0E00               	movlw	0
  1468  0014FA  6E07               	movwf	(i2UART_Write_Text@i+1)^0,c
  1469  0014FC  0E00               	movlw	0
  1470  0014FE  6E06               	movwf	i2UART_Write_Text@i^0,c
  1471  001500  EF9D  F00A         	goto	i2l1213
  1472  001504                     i2l1209:
  1473                           
  1474                           ;./UART.h: 57:    UART_Write(text[i]);
  1475  001504  5006               	movf	i2UART_Write_Text@i^0,w,c
  1476  001506  2402               	addwf	i2UART_Write_Text@text^0,w,c
  1477  001508  6E04               	movwf	??i2_UART_Write_Text^0,c
  1478  00150A  5007               	movf	(i2UART_Write_Text@i+1)^0,w,c
  1479  00150C  2003               	addwfc	(i2UART_Write_Text@text+1)^0,w,c
  1480  00150E  6E05               	movwf	(??i2_UART_Write_Text+1)^0,c
  1481  001510  C004  FFF6         	movff	??i2_UART_Write_Text,tblptrl
  1482  001514  C005  FFF7         	movff	??i2_UART_Write_Text+1,tblptrh
  1483  001518  0E00               	movlw	low (__smallconst shr (0+16))
  1484  00151A  6EF8               	movwf	tblptru,c
  1485  00151C  0E0F               	movlw	(high __ramtop+-1)
  1486  00151E  64F7               	cpfsgt	tblptrh,c
  1487  001520  D003               	bra	i2u64_47
  1488  001522  0008               	tblrd		*
  1489  001524  50F5               	movf	tablat,w,c
  1490  001526  D005               	bra	i2u64_40
  1491  001528                     i2u64_47:
  1492  001528  CFF6 FFE9          	movff	tblptrl,fsr0l
  1493  00152C  CFF7 FFEA          	movff	tblptrh,fsr0h
  1494  001530  50EF               	movf	indf0,w,c
  1495  001532                     i2u64_40:
  1496  001532  EC5C  F00B         	call	i2_UART_Write
  1497  001536  4A06               	infsnz	i2UART_Write_Text@i^0,f,c
  1498  001538  2A07               	incf	(i2UART_Write_Text@i+1)^0,f,c
  1499  00153A                     i2l1213:
  1500  00153A  5006               	movf	i2UART_Write_Text@i^0,w,c
  1501  00153C  2402               	addwf	i2UART_Write_Text@text^0,w,c
  1502  00153E  6E04               	movwf	??i2_UART_Write_Text^0,c
  1503  001540  5007               	movf	(i2UART_Write_Text@i+1)^0,w,c
  1504  001542  2003               	addwfc	(i2UART_Write_Text@text+1)^0,w,c
  1505  001544  6E05               	movwf	(??i2_UART_Write_Text+1)^0,c
  1506  001546  C004  FFF6         	movff	??i2_UART_Write_Text,tblptrl
  1507  00154A  C005  FFF7         	movff	??i2_UART_Write_Text+1,tblptrh
  1508  00154E  0E00               	movlw	low (__smallconst shr (0+16))
  1509  001550  6EF8               	movwf	tblptru,c
  1510  001552  0E0F               	movlw	(high __ramtop+-1)
  1511  001554  64F7               	cpfsgt	tblptrh,c
  1512  001556  D003               	bra	i2u65_47
  1513  001558  0008               	tblrd		*
  1514  00155A  50F5               	movf	tablat,w,c
  1515  00155C  D005               	bra	i2u65_40
  1516  00155E                     i2u65_47:
  1517  00155E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1518  001562  CFF7 FFEA          	movff	tblptrh,fsr0h
  1519  001566  50EF               	movf	indf0,w,c
  1520  001568                     i2u65_40:
  1521  001568  0900               	iorlw	0
  1522  00156A  A4D8               	btfss	status,2,c
  1523  00156C  EFBA  F00A         	goto	i2u66_41
  1524  001570  EFBC  F00A         	goto	i2u66_40
  1525  001574                     i2u66_41:
  1526  001574  EF82  F00A         	goto	i2l1209
  1527  001578                     i2u66_40:
  1528  001578  0012               	return		;funcret
  1529  00157A                     __end_ofi2_UART_Write_Text:
  1530                           	callstack 0
  1531                           
  1532 ;; *************** function i2_UART_Write *****************
  1533 ;; Defined at:
  1534 ;;		line 47 in file "./UART.h"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  data            1    wreg     unsigned char 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  data            1    0[COMRAM] unsigned char 
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      void 
  1541 ;; Registers used:
  1542 ;;		wreg
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1551 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1552 ;;Total ram usage:        1 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		i2_UART_Write_Text
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text14
  1562  0016B8                     __ptext14:
  1563                           	callstack 0
  1564  0016B8                     i2_UART_Write:
  1565                           	callstack 26
  1566                           
  1567                           ;incstack = 0
  1568                           ;i2UART_Write@data stored from wreg
  1569  0016B8  6E01               	movwf	i2UART_Write@data^0,c
  1570  0016BA                     i2l88:
  1571  0016BA  A2AC               	btfss	4012,1,c	;volatile
  1572  0016BC  EF62  F00B         	goto	i2u54_41
  1573  0016C0  EF64  F00B         	goto	i2u54_40
  1574  0016C4                     i2u54_41:
  1575  0016C4  EF5D  F00B         	goto	i2l88
  1576  0016C8                     i2u54_40:
  1577  0016C8                     
  1578                           ;./UART.h: 50:   TXREG = data;
  1579  0016C8  C001  FFAD         	movff	i2UART_Write@data,4013	;volatile
  1580  0016CC  0012               	return		;funcret
  1581  0016CE                     __end_ofi2_UART_Write:
  1582                           	callstack 0
  1583                           
  1584 ;; *************** function _int_2_str *****************
  1585 ;; Defined at:
  1586 ;;		line 70 in file "main.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;  num             2   14[COMRAM] int 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2, status,0, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1603 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1604 ;;Total ram usage:        2 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; Hardware stack levels required when called:    1
  1607 ;; This function calls:
  1608 ;;		___awdiv
  1609 ;;		___awmod
  1610 ;; This function is called by:
  1611 ;;		_ISR
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           	psect	text15
  1616  0013E4                     __ptext15:
  1617                           	callstack 0
  1618  0013E4                     _int_2_str:
  1619                           	callstack 26
  1620  0013E4                     
  1621                           ;main.c: 73:     *(num_as_string+3) = ((num%10)+48);
  1622  0013E4  C00F  F001         	movff	int_2_str@num,___awmod@dividend
  1623  0013E8  C010  F002         	movff	int_2_str@num+1,___awmod@dividend+1
  1624  0013EC  0E00               	movlw	0
  1625  0013EE  6E04               	movwf	(___awmod@divisor+1)^0,c
  1626  0013F0  0E0A               	movlw	10
  1627  0013F2  6E03               	movwf	___awmod@divisor^0,c
  1628  0013F4  EC9A  F009         	call	___awmod	;wreg free
  1629  0013F8  5001               	movf	?___awmod^0,w,c
  1630  0013FA  0F30               	addlw	48
  1631  0013FC  6E53               	movwf	(_num_as_string+3)^0,c	;volatile
  1632                           
  1633                           ;main.c: 74:     *(num_as_string+2) = (((num%100)/10)+48);
  1634  0013FE  0E00               	movlw	0
  1635  001400  6E04               	movwf	(___awmod@divisor+1)^0,c
  1636  001402  0E64               	movlw	100
  1637  001404  6E03               	movwf	___awmod@divisor^0,c
  1638  001406  C00F  F001         	movff	int_2_str@num,___awmod@dividend
  1639  00140A  C010  F002         	movff	int_2_str@num+1,___awmod@dividend+1
  1640  00140E  EC9A  F009         	call	___awmod	;wreg free
  1641  001412  C001  F007         	movff	?___awmod,___awdiv@dividend
  1642  001416  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  1643  00141A  0E00               	movlw	0
  1644  00141C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1645  00141E  0E0A               	movlw	10
  1646  001420  6E09               	movwf	___awdiv@divisor^0,c
  1647  001422  EC38  F009         	call	___awdiv	;wreg free
  1648  001426  5007               	movf	?___awdiv^0,w,c
  1649  001428  0F30               	addlw	48
  1650  00142A  6E52               	movwf	(_num_as_string+2)^0,c	;volatile
  1651                           
  1652                           ;main.c: 75:     *(num_as_string+1) = (((num/100)%10)+48);
  1653  00142C  0E00               	movlw	0
  1654  00142E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1655  001430  0E64               	movlw	100
  1656  001432  6E09               	movwf	___awdiv@divisor^0,c
  1657  001434  C00F  F007         	movff	int_2_str@num,___awdiv@dividend
  1658  001438  C010  F008         	movff	int_2_str@num+1,___awdiv@dividend+1
  1659  00143C  EC38  F009         	call	___awdiv	;wreg free
  1660  001440  C007  F001         	movff	?___awdiv,___awmod@dividend
  1661  001444  C008  F002         	movff	?___awdiv+1,___awmod@dividend+1
  1662  001448  0E00               	movlw	0
  1663  00144A  6E04               	movwf	(___awmod@divisor+1)^0,c
  1664  00144C  0E0A               	movlw	10
  1665  00144E  6E03               	movwf	___awmod@divisor^0,c
  1666  001450  EC9A  F009         	call	___awmod	;wreg free
  1667  001454  5001               	movf	?___awmod^0,w,c
  1668  001456  0F30               	addlw	48
  1669  001458  6E51               	movwf	(_num_as_string+1)^0,c	;volatile
  1670                           
  1671                           ;main.c: 76:     *(num_as_string+0) = ((num/1000)+48);
  1672  00145A  C00F  F007         	movff	int_2_str@num,___awdiv@dividend
  1673  00145E  C010  F008         	movff	int_2_str@num+1,___awdiv@dividend+1
  1674  001462  0E03               	movlw	3
  1675  001464  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1676  001466  0EE8               	movlw	232
  1677  001468  6E09               	movwf	___awdiv@divisor^0,c
  1678  00146A  EC38  F009         	call	___awdiv	;wreg free
  1679  00146E  5007               	movf	?___awdiv^0,w,c
  1680  001470  0F30               	addlw	48
  1681  001472  6E50               	movwf	_num_as_string^0,c	;volatile
  1682  001474  0012               	return		;funcret
  1683  001476                     __end_of_int_2_str:
  1684                           	callstack 0
  1685                           
  1686 ;; *************** function ___awmod *****************
  1687 ;; Defined at:
  1688 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;  dividend        2    0[COMRAM] int 
  1691 ;;  divisor         2    2[COMRAM] int 
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;  sign            1    5[COMRAM] unsigned char 
  1694 ;;  counter         1    4[COMRAM] unsigned char 
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  2    0[COMRAM] int 
  1697 ;; Registers used:
  1698 ;;		wreg, status,2, status,0
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1704 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1705 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;Total ram usage:        6 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; This function calls:
  1711 ;;		Nothing
  1712 ;; This function is called by:
  1713 ;;		_int_2_str
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text16
  1718  001334                     __ptext16:
  1719                           	callstack 0
  1720  001334                     ___awmod:
  1721                           	callstack 26
  1722  001334  0E00               	movlw	0
  1723  001336  6E06               	movwf	___awmod@sign^0,c
  1724  001338  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1725  00133A  EFA3  F009         	goto	i2u48_40
  1726  00133E  EFA1  F009         	goto	i2u48_41
  1727  001342                     i2u48_41:
  1728  001342  EFA9  F009         	goto	i2l1153
  1729  001346                     i2u48_40:
  1730  001346  6C01               	negf	___awmod@dividend^0,c
  1731  001348  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1732  00134A  B0D8               	btfsc	status,0,c
  1733  00134C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1734  00134E  0E01               	movlw	1
  1735  001350  6E06               	movwf	___awmod@sign^0,c
  1736  001352                     i2l1153:
  1737  001352  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1738  001354  EFB0  F009         	goto	i2u49_40
  1739  001358  EFAE  F009         	goto	i2u49_41
  1740  00135C                     i2u49_41:
  1741  00135C  EFB4  F009         	goto	i2l1157
  1742  001360                     i2u49_40:
  1743  001360  6C03               	negf	___awmod@divisor^0,c
  1744  001362  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1745  001364  B0D8               	btfsc	status,0,c
  1746  001366  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1747  001368                     i2l1157:
  1748  001368  5003               	movf	___awmod@divisor^0,w,c
  1749  00136A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1750  00136C  B4D8               	btfsc	status,2,c
  1751  00136E  EFBB  F009         	goto	i2u50_41
  1752  001372  EFBD  F009         	goto	i2u50_40
  1753  001376                     i2u50_41:
  1754  001376  EFE1  F009         	goto	i2l1173
  1755  00137A                     i2u50_40:
  1756  00137A  0E01               	movlw	1
  1757  00137C  6E05               	movwf	___awmod@counter^0,c
  1758  00137E  EFC5  F009         	goto	i2l1163
  1759  001382                     i2l1161:
  1760  001382  90D8               	bcf	status,0,c
  1761  001384  3603               	rlcf	___awmod@divisor^0,f,c
  1762  001386  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1763  001388  2A05               	incf	___awmod@counter^0,f,c
  1764  00138A                     i2l1163:
  1765  00138A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1766  00138C  EFCA  F009         	goto	i2u51_41
  1767  001390  EFCC  F009         	goto	i2u51_40
  1768  001394                     i2u51_41:
  1769  001394  EFC1  F009         	goto	i2l1161
  1770  001398                     i2u51_40:
  1771  001398                     i2l1165:
  1772  001398  5003               	movf	___awmod@divisor^0,w,c
  1773  00139A  5C01               	subwf	___awmod@dividend^0,w,c
  1774  00139C  5004               	movf	(___awmod@divisor+1)^0,w,c
  1775  00139E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1776  0013A0  A0D8               	btfss	status,0,c
  1777  0013A2  EFD5  F009         	goto	i2u52_41
  1778  0013A6  EFD7  F009         	goto	i2u52_40
  1779  0013AA                     i2u52_41:
  1780  0013AA  EFDB  F009         	goto	i2l1169
  1781  0013AE                     i2u52_40:
  1782  0013AE  5003               	movf	___awmod@divisor^0,w,c
  1783  0013B0  5E01               	subwf	___awmod@dividend^0,f,c
  1784  0013B2  5004               	movf	(___awmod@divisor+1)^0,w,c
  1785  0013B4  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1786  0013B6                     i2l1169:
  1787  0013B6  90D8               	bcf	status,0,c
  1788  0013B8  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1789  0013BA  3203               	rrcf	___awmod@divisor^0,f,c
  1790  0013BC  2E05               	decfsz	___awmod@counter^0,f,c
  1791  0013BE  EFCC  F009         	goto	i2l1165
  1792  0013C2                     i2l1173:
  1793  0013C2  5006               	movf	___awmod@sign^0,w,c
  1794  0013C4  B4D8               	btfsc	status,2,c
  1795  0013C6  EFE7  F009         	goto	i2u53_41
  1796  0013CA  EFE9  F009         	goto	i2u53_40
  1797  0013CE                     i2u53_41:
  1798  0013CE  EFED  F009         	goto	i2l1177
  1799  0013D2                     i2u53_40:
  1800  0013D2  6C01               	negf	___awmod@dividend^0,c
  1801  0013D4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1802  0013D6  B0D8               	btfsc	status,0,c
  1803  0013D8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1804  0013DA                     i2l1177:
  1805  0013DA  C001  F001         	movff	___awmod@dividend,?___awmod
  1806  0013DE  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1807  0013E2  0012               	return		;funcret
  1808  0013E4                     __end_of___awmod:
  1809                           	callstack 0
  1810                           
  1811 ;; *************** function ___awdiv *****************
  1812 ;; Defined at:
  1813 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  dividend        2    6[COMRAM] int 
  1816 ;;  divisor         2    8[COMRAM] int 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  quotient        2   12[COMRAM] int 
  1819 ;;  sign            1   11[COMRAM] unsigned char 
  1820 ;;  counter         1   10[COMRAM] unsigned char 
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  2    6[COMRAM] int 
  1823 ;; Registers used:
  1824 ;;		wreg, status,2, status,0
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1830 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1833 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1834 ;;Total ram usage:        8 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; This function calls:
  1837 ;;		Nothing
  1838 ;; This function is called by:
  1839 ;;		_int_2_str
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           	psect	text17
  1844  001270                     __ptext17:
  1845                           	callstack 0
  1846  001270                     ___awdiv:
  1847                           	callstack 26
  1848  001270  0E00               	movlw	0
  1849  001272  6E0C               	movwf	___awdiv@sign^0,c
  1850  001274  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  1851  001276  EF41  F009         	goto	i2u42_40
  1852  00127A  EF3F  F009         	goto	i2u42_41
  1853  00127E                     i2u42_41:
  1854  00127E  EF47  F009         	goto	i2l1109
  1855  001282                     i2u42_40:
  1856  001282  6C09               	negf	___awdiv@divisor^0,c
  1857  001284  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  1858  001286  B0D8               	btfsc	status,0,c
  1859  001288  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  1860  00128A  0E01               	movlw	1
  1861  00128C  6E0C               	movwf	___awdiv@sign^0,c
  1862  00128E                     i2l1109:
  1863  00128E  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  1864  001290  EF4E  F009         	goto	i2u43_40
  1865  001294  EF4C  F009         	goto	i2u43_41
  1866  001298                     i2u43_41:
  1867  001298  EF54  F009         	goto	i2l1115
  1868  00129C                     i2u43_40:
  1869  00129C  6C07               	negf	___awdiv@dividend^0,c
  1870  00129E  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  1871  0012A0  B0D8               	btfsc	status,0,c
  1872  0012A2  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  1873  0012A4  0E01               	movlw	1
  1874  0012A6  1A0C               	xorwf	___awdiv@sign^0,f,c
  1875  0012A8                     i2l1115:
  1876  0012A8  0E00               	movlw	0
  1877  0012AA  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  1878  0012AC  0E00               	movlw	0
  1879  0012AE  6E0D               	movwf	___awdiv@quotient^0,c
  1880  0012B0  5009               	movf	___awdiv@divisor^0,w,c
  1881  0012B2  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  1882  0012B4  B4D8               	btfsc	status,2,c
  1883  0012B6  EF5F  F009         	goto	i2u44_41
  1884  0012BA  EF61  F009         	goto	i2u44_40
  1885  0012BE                     i2u44_41:
  1886  0012BE  EF89  F009         	goto	i2l1137
  1887  0012C2                     i2u44_40:
  1888  0012C2  0E01               	movlw	1
  1889  0012C4  6E0B               	movwf	___awdiv@counter^0,c
  1890  0012C6  EF69  F009         	goto	i2l1123
  1891  0012CA                     i2l1121:
  1892  0012CA  90D8               	bcf	status,0,c
  1893  0012CC  3609               	rlcf	___awdiv@divisor^0,f,c
  1894  0012CE  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  1895  0012D0  2A0B               	incf	___awdiv@counter^0,f,c
  1896  0012D2                     i2l1123:
  1897  0012D2  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  1898  0012D4  EF6E  F009         	goto	i2u45_41
  1899  0012D8  EF70  F009         	goto	i2u45_40
  1900  0012DC                     i2u45_41:
  1901  0012DC  EF65  F009         	goto	i2l1121
  1902  0012E0                     i2u45_40:
  1903  0012E0                     i2l1125:
  1904  0012E0  90D8               	bcf	status,0,c
  1905  0012E2  360D               	rlcf	___awdiv@quotient^0,f,c
  1906  0012E4  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  1907  0012E6  5009               	movf	___awdiv@divisor^0,w,c
  1908  0012E8  5C07               	subwf	___awdiv@dividend^0,w,c
  1909  0012EA  500A               	movf	(___awdiv@divisor+1)^0,w,c
  1910  0012EC  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  1911  0012EE  A0D8               	btfss	status,0,c
  1912  0012F0  EF7C  F009         	goto	i2u46_41
  1913  0012F4  EF7E  F009         	goto	i2u46_40
  1914  0012F8                     i2u46_41:
  1915  0012F8  EF83  F009         	goto	i2l1133
  1916  0012FC                     i2u46_40:
  1917  0012FC  5009               	movf	___awdiv@divisor^0,w,c
  1918  0012FE  5E07               	subwf	___awdiv@dividend^0,f,c
  1919  001300  500A               	movf	(___awdiv@divisor+1)^0,w,c
  1920  001302  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  1921  001304  800D               	bsf	___awdiv@quotient^0,0,c
  1922  001306                     i2l1133:
  1923  001306  90D8               	bcf	status,0,c
  1924  001308  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  1925  00130A  3209               	rrcf	___awdiv@divisor^0,f,c
  1926  00130C  2E0B               	decfsz	___awdiv@counter^0,f,c
  1927  00130E  EF70  F009         	goto	i2l1125
  1928  001312                     i2l1137:
  1929  001312  500C               	movf	___awdiv@sign^0,w,c
  1930  001314  B4D8               	btfsc	status,2,c
  1931  001316  EF8F  F009         	goto	i2u47_41
  1932  00131A  EF91  F009         	goto	i2u47_40
  1933  00131E                     i2u47_41:
  1934  00131E  EF95  F009         	goto	i2l1141
  1935  001322                     i2u47_40:
  1936  001322  6C0D               	negf	___awdiv@quotient^0,c
  1937  001324  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  1938  001326  B0D8               	btfsc	status,0,c
  1939  001328  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  1940  00132A                     i2l1141:
  1941  00132A  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  1942  00132E  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  1943  001332  0012               	return		;funcret
  1944  001334                     __end_of___awdiv:
  1945                           	callstack 0
  1946                           
  1947                           	psect	rparam
  1948  0000                     
  1949                           	psect	temp
  1950  000057                     btemp:
  1951                           	callstack 0
  1952  000057                     	ds	1
  1953  0000                     int$flags	set	btemp
  1954  0000                     wtemp8	set	btemp+1
  1955  0000                     ttemp5	set	btemp+1
  1956  0000                     ttemp6	set	btemp+4
  1957  0000                     ttemp7	set	btemp+8
  1958                           
  1959                           	psect	idloc
  1960                           
  1961                           ;Config register IDLOC0 @ 0x200000
  1962                           ;	unspecified, using default values
  1963  200000                     	org	2097152
  1964  200000  FF                 	db	255
  1965                           
  1966                           ;Config register IDLOC1 @ 0x200001
  1967                           ;	unspecified, using default values
  1968  200001                     	org	2097153
  1969  200001  FF                 	db	255
  1970                           
  1971                           ;Config register IDLOC2 @ 0x200002
  1972                           ;	unspecified, using default values
  1973  200002                     	org	2097154
  1974  200002  FF                 	db	255
  1975                           
  1976                           ;Config register IDLOC3 @ 0x200003
  1977                           ;	unspecified, using default values
  1978  200003                     	org	2097155
  1979  200003  FF                 	db	255
  1980                           
  1981                           ;Config register IDLOC4 @ 0x200004
  1982                           ;	unspecified, using default values
  1983  200004                     	org	2097156
  1984  200004  FF                 	db	255
  1985                           
  1986                           ;Config register IDLOC5 @ 0x200005
  1987                           ;	unspecified, using default values
  1988  200005                     	org	2097157
  1989  200005  FF                 	db	255
  1990                           
  1991                           ;Config register IDLOC6 @ 0x200006
  1992                           ;	unspecified, using default values
  1993  200006                     	org	2097158
  1994  200006  FF                 	db	255
  1995                           
  1996                           ;Config register IDLOC7 @ 0x200007
  1997                           ;	unspecified, using default values
  1998  200007                     	org	2097159
  1999  200007  FF                 	db	255
  2000                           
  2001                           	psect	config
  2002                           
  2003                           ; Padding undefined space
  2004  300000                     	org	3145728
  2005  300000  FF                 	db	255
  2006                           
  2007                           ;Config register CONFIG1H @ 0x300001
  2008                           ;	Oscillator Selection bits
  2009                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  2010                           ;	Fail-Safe Clock Monitor Enable bit
  2011                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2012                           ;	Internal/External Oscillator Switchover bit
  2013                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2014  300001                     	org	3145729
  2015  300001  06                 	db	6
  2016                           
  2017                           ;Config register CONFIG2L @ 0x300002
  2018                           ;	Power-up Timer Enable bit
  2019                           ;	PWRT = OFF, PWRT disabled
  2020                           ;	Brown-out Reset Enable bits
  2021                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2022                           ;	Brown Out Reset Voltage bits
  2023                           ;	BORV = 3, Minimum setting
  2024  300002                     	org	3145730
  2025  300002  1F                 	db	31
  2026                           
  2027                           ;Config register CONFIG2H @ 0x300003
  2028                           ;	Watchdog Timer Enable bit
  2029                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2030                           ;	Watchdog Timer Postscale Select bits
  2031                           ;	WDTPS = 32768, 1:32768
  2032  300003                     	org	3145731
  2033  300003  1E                 	db	30
  2034                           
  2035                           ; Padding undefined space
  2036  300004                     	org	3145732
  2037  300004  FF                 	db	255
  2038                           
  2039                           ;Config register CONFIG3H @ 0x300005
  2040                           ;	CCP2 MUX bit
  2041                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2042                           ;	PORTB A/D Enable bit
  2043                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2044                           ;	Low-Power Timer1 Oscillator Enable bit
  2045                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2046                           ;	MCLR Pin Enable bit
  2047                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2048  300005                     	org	3145733
  2049  300005  81                 	db	129
  2050                           
  2051                           ;Config register CONFIG4L @ 0x300006
  2052                           ;	Stack Full/Underflow Reset Enable bit
  2053                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  2054                           ;	Single-Supply ICSP Enable bit
  2055                           ;	LVP = ON, Single-Supply ICSP enabled
  2056                           ;	Extended Instruction Set Enable bit
  2057                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2058                           ;	Background Debugger Enable bit
  2059                           ;	DEBUG = 0x1, unprogrammed default
  2060  300006                     	org	3145734
  2061  300006  84                 	db	132
  2062                           
  2063                           ; Padding undefined space
  2064  300007                     	org	3145735
  2065  300007  FF                 	db	255
  2066                           
  2067                           ;Config register CONFIG5L @ 0x300008
  2068                           ;	Code Protection bit
  2069                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2070                           ;	Code Protection bit
  2071                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2072                           ;	Code Protection bit
  2073                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2074                           ;	Code Protection bit
  2075                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2076  300008                     	org	3145736
  2077  300008  0F                 	db	15
  2078                           
  2079                           ;Config register CONFIG5H @ 0x300009
  2080                           ;	Boot Block Code Protection bit
  2081                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2082                           ;	Data EEPROM Code Protection bit
  2083                           ;	CPD = OFF, Data EEPROM not code-protected
  2084  300009                     	org	3145737
  2085  300009  C0                 	db	192
  2086                           
  2087                           ;Config register CONFIG6L @ 0x30000A
  2088                           ;	Write Protection bit
  2089                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2090                           ;	Write Protection bit
  2091                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2092                           ;	Write Protection bit
  2093                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2094                           ;	Write Protection bit
  2095                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2096  30000A                     	org	3145738
  2097  30000A  0F                 	db	15
  2098                           
  2099                           ;Config register CONFIG6H @ 0x30000B
  2100                           ;	Configuration Register Write Protection bit
  2101                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2102                           ;	Boot Block Write Protection bit
  2103                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2104                           ;	Data EEPROM Write Protection bit
  2105                           ;	WRTD = OFF, Data EEPROM not write-protected
  2106  30000B                     	org	3145739
  2107  30000B  E0                 	db	224
  2108                           
  2109                           ;Config register CONFIG7L @ 0x30000C
  2110                           ;	Table Read Protection bit
  2111                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2112                           ;	Table Read Protection bit
  2113                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2114                           ;	Table Read Protection bit
  2115                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2116                           ;	Table Read Protection bit
  2117                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2118  30000C                     	org	3145740
  2119  30000C  0F                 	db	15
  2120                           
  2121                           ;Config register CONFIG7H @ 0x30000D
  2122                           ;	Boot Block Table Read Protection bit
  2123                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2124  30000D                     	org	3145741
  2125  30000D  40                 	db	64
  2126                           tosu	equ	0xFFF
  2127                           tosh	equ	0xFFE
  2128                           tosl	equ	0xFFD
  2129                           stkptr	equ	0xFFC
  2130                           pclatu	equ	0xFFB
  2131                           pclath	equ	0xFFA
  2132                           pcl	equ	0xFF9
  2133                           tblptru	equ	0xFF8
  2134                           tblptrh	equ	0xFF7
  2135                           tblptrl	equ	0xFF6
  2136                           tablat	equ	0xFF5
  2137                           prodh	equ	0xFF4
  2138                           prodl	equ	0xFF3
  2139                           indf0	equ	0xFEF
  2140                           postinc0	equ	0xFEE
  2141                           postdec0	equ	0xFED
  2142                           preinc0	equ	0xFEC
  2143                           plusw0	equ	0xFEB
  2144                           fsr0h	equ	0xFEA
  2145                           fsr0l	equ	0xFE9
  2146                           wreg	equ	0xFE8
  2147                           indf1	equ	0xFE7
  2148                           postinc1	equ	0xFE6
  2149                           postdec1	equ	0xFE5
  2150                           preinc1	equ	0xFE4
  2151                           plusw1	equ	0xFE3
  2152                           fsr1h	equ	0xFE2
  2153                           fsr1l	equ	0xFE1
  2154                           bsr	equ	0xFE0
  2155                           indf2	equ	0xFDF
  2156                           postinc2	equ	0xFDE
  2157                           postdec2	equ	0xFDD
  2158                           preinc2	equ	0xFDC
  2159                           plusw2	equ	0xFDB
  2160                           fsr2h	equ	0xFDA
  2161                           fsr2l	equ	0xFD9
  2162                           status	equ	0xFD8

Data Sizes:
    Strings     62
    Constant    0
    Data        7
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     52      86
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 40
		 -> num_as_string(COMRAM[7]), STR_3(CODE[22]), STR_2(CODE[40]), STR_1(CODE[22]), 


Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_Write_Text->_UART_Write
    _UART_Init->___aldiv

Critical Paths under _ISR in COMRAM

    _ISR->_int_2_str
    i2_UART_Write_Text->i2_UART_Write
    _int_2_str->___awdiv
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1219
                     _ADC_configurar
                    _PORT_configurar
                    _TMR0_configurar
                          _UART_Init
                    _UART_Write_Text
                    _initialize_TMR0
                        _turn_on_ADC
                       _turn_on_TMR0
 ---------------------------------------------------------------------------------
 (1) _turn_on_TMR0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _turn_on_ADC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_TMR0                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      6     4      2     383
                                             25 COMRAM     6     4      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      15
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           14    10      4     836
                                             38 COMRAM    14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                             24 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _TMR0_configurar                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PORT_configurar                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_configurar                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  8     8      0    1810
                                             16 COMRAM     8     8      0
                          _int_2_str
                  i2_UART_Write_Text
                  i2_initialize_TMR0
 ---------------------------------------------------------------------------------
 (4) i2_initialize_TMR0                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) i2_UART_Write_Text                                    6     4      2     138
                                              1 COMRAM     6     4      2
                       i2_UART_Write
 ---------------------------------------------------------------------------------
 (5) i2_UART_Write                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _int_2_str                                            2     0      2    1672
                                             14 COMRAM     2     0      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     752
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     756
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_configurar
   _PORT_configurar
   _TMR0_configurar
   _UART_Init
     ___aldiv
   _UART_Write_Text
     _UART_Write
   _initialize_TMR0
   _turn_on_ADC
   _turn_on_TMR0

 _ISR (ROOT)
   _int_2_str
     ___awdiv
       ___awmod (ARG)
     ___awmod
   i2_UART_Write_Text
     i2_UART_Write
   i2_initialize_TMR0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     34      56       1       68.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      56      34        0.0%
DATA                 0      0      56       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Apr 28 22:19:28 2022

                        l67 1162                          l91 16B6                          l88 16A4  
                        l97 14F6                          u10 16B2                          u11 16AE  
              ___awdiv@sign 000C           i2_initialize_TMR0 16E4          ?i2_initialize_TMR0 0001  
                       l131 1704                         l140 1700                         l125 16F4  
                       l134 16D8                         l128 16A0                         l225 126E  
                       l137 16E2                         l821 16B2                         l819 16A4  
                       l981 16D4                         l991 1692                         l983 16DA  
                       l985 1682                         l977 16EE                         l993 1702  
                       l987 1686                         l979 16CE                         l995 16FE  
                       l989 1688                         u400 121C                         u401 1218  
                       u410 124E                         u411 124A                         u360 1176  
                       u600 1152                         u361 1172                         u601 114E  
                       u370 1198                         u610 14B0                         u371 1194  
                       u380 11D2                         u620 14E6                         _ISR 0008  
                       u381 11CE                         u390 11F4                         u630 14F6  
                       u391 11F0                         u631 14F2                         u617 14A6  
                       u570 10C8                         u571 10C4                         u555 1052  
                       u627 14DC                         u565 108C                         u585 10DA  
                       u595 1114                         _val 004E                ___awmod@sign 0006  
                       wreg 000FE8         ??i2_initialize_TMR0 0001                        ?_ISR 0001  
                      l1201 14B4                        l1203 14B8                        l1061 1176  
                      l1221 1614                        l1071 11AC                        l1063 1186  
                      l1231 1628                        l1223 1618                        l1215 15F0  
                      l1081 11F4                        l1073 11BC                        l1065 118A  
                      l1057 1164                        l1233 1634                        l1225 161C  
                      l1217 15F4                        l1091 1238                        l1083 11FE  
                      l1075 11D2                        l1067 1198                        l1059 1168  
                      l1227 1620                        l1219 1608                        l1085 121C  
                      l1077 11DA                        l1093 123E                        l1069 11A8  
                      l1229 1624                        l1095 124E                        l1087 122C  
                      l1079 11E6                        l1191 1140                        l1097 125E  
                      l1089 122E                        l1193 1142                        l1185 1040  
                      l1195 1152                        l1187 10B8                        l1189 10C8  
                      l1197 1476                        l1199 1482                        STR_1 1029  
                      STR_2 1001                        STR_3 1029                        _BRGH 007D62  
                      _CREN 007D5C                        _RCIF 007CF5                        i2l91 16CC  
                      i2l88 16BA                        i2l97 1578                        _SPEN 007D5F  
                      _TRMT 007D61                        _TXEN 007D65                        _SYNC 007D64  
                      _main 15F0                        fsr0h 000FEA                        indf0 000FEF  
                      fsr0l 000FE9                        fsr1l 000FE1                        btemp 0057  
                      start 000E                ___param_bank 000000   __end_ofi2_initialize_TMR0 16EE  
   __end_of_UART_Write_Text 14F8                       ??_ISR 0011             __end_of___aldiv 1270  
                     ?_main 0001             __end_of___awdiv 1334             __end_of___awmod 13E4  
           ___awdiv@divisor 0009                       i2l122 1474                       i2l116 159C  
                     i2l119 15D4                       i2l137 16EC                       i2l390 13E2  
                     i2l377 1332             ___awdiv@counter 000B                       _RCREG 000FAE  
                     _TMR0H 000FD7                       _TMR0L 000FD6                       _SPBRG 000FAF  
         ??_initialize_TMR0 0019                       _TXREG 000FAD                 _turn_on_ADC 1702  
               ?_UART_Write 0001          __size_of_UART_Init 0124                       tablat 000FF5  
                     ttemp5 0058                       ttemp6 005B                       ttemp7 005F  
                     status 000FD8                       wtemp8 0058             __initialization 1648  
              __end_of_main 1648       __size_of_turn_on_TMR0 0004            ??_ADC_configurar 0019  
                    ??_main 0035               __activetblptr 000002                      _ADRESH 000FC4  
                    _ADRESL 000FC3            ___awdiv@dividend 0007                      i2l1101 1270  
                    i2l1111 129C                      i2l1103 1274                      i2l1007 16E4  
                    i2l1121 12CA                      i2l1113 12A4                      i2l1105 1282  
                    i2l1131 1304                      i2l1123 12D2                      i2l1115 12A8  
                    i2l1107 128A                      i2l1211 1536                      i2l1141 132A  
                    i2l1133 1306                      i2l1125 12E0                      i2l1117 12B0  
                    i2l1109 128E                      i2l1205 13E4                      i2l1213 153A  
                    i2l1135 130C                      i2l1127 12E6                      i2l1119 12C2  
                    i2l1151 134E                      i2l1207 14F8                      i2l1129 12FC  
                    i2l1137 1312                      i2l1161 1382                      i2l1153 1352  
                    i2l1145 1334                      i2l1209 1504                      i2l1241 15AA  
                    i2l1139 1322                      i2l1171 13BC                      i2l1163 138A  
                    i2l1155 1360                      i2l1147 1338                      i2l1243 15C4  
                    i2l1235 1594                      i2l1165 1398                      i2l1173 13C2  
                    i2l1157 1368                      i2l1149 1346                      i2l1181 16BA  
                    i2l1245 15D0                      i2l1237 1596                      i2l1175 13D2  
                    i2l1167 13AE                      i2l1159 137A                      i2l1183 16C8  
                    i2l1247 15D2                      i2l1239 159A                      i2l1177 13DA  
                    i2l1169 13B6             _TMR0_configurar 16CE                      _TRISC6 007CA6  
                    _TRISC7 007CA7                _turn_on_TMR0 16FE    __size_of_PORT_configurar 0008  
         __end_of_UART_Init 1164  __size_ofi2_initialize_TMR0 000A         __size_of_UART_Write 0016  
                 ??___aldiv 0021                   ??___awdiv 000B                   ??___awmod 0005  
          ?_UART_Write_Text 001A                      clear_0 166E            ___awdiv@quotient 000D  
           ___awmod@divisor 0003             ___awmod@counter 0005                      _string 0035  
              __pdataCOMRAM 0050                __mediumconst 0000                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                int_2_str@num 000F  
                __accesstop 0080     __end_of__initialization 1674               ___rparam_used 000001  
            __pcstackCOMRAM 0001     __end_of_TMR0_configurar 16DA               ?i2_UART_Write 0001  
        __size_of_int_2_str 0092            i2UART_Write@data 0001          i2UART_Write_Text@i 0006  
           _initialize_TMR0 16DA           ??_PORT_configurar 0019                ?_turn_on_ADC 0001  
            ??i2_UART_Write 0001                ??_UART_Write 0019                     i2u42_40 1282  
                   i2u50_40 137A                     i2u42_41 127E                     i2u50_41 1376  
                   i2u43_40 129C                     i2u51_40 1398                     i2u43_41 1298  
                   i2u51_41 1394                     i2u44_40 12C2                     i2u52_40 13AE  
                   i2u44_41 12BE                     i2u52_41 13AA                     i2u45_40 12E0  
                   i2u53_40 13D2                     i2u45_41 12DC                     i2u53_41 13CE  
                   i2u46_40 12FC                     i2u54_40 16C8                     i2u46_41 12F8  
                   i2u54_41 16C4                     i2u47_40 1322                     i2u47_41 131E  
                   i2u48_40 1346                     i2u64_40 1532                     i2u48_41 1342  
                   i2u64_47 1528                     i2u49_40 1360                     i2u65_40 1568  
                   i2u49_41 135C                     i2u65_47 155E                     i2u66_40 1578  
                   i2u66_41 1574                     i2u67_40 15AA                     i2u67_41 15A6  
                   __Hparam 0000                     __Lparam 0000                     ___aldiv 1164  
                   ___awdiv 1270                     ___awmod 1334          __end_of_UART_Write 16B8  
              __psmallconst 1000                     __pcinit 1648           __end_of_int_2_str 1476  
                   __ramtop 1000                     __ptext0 15F0                     __ptext1 16FE  
                   __ptext2 1702                     __ptext3 16DA                     __ptext4 1476  
                   __ptext5 16A2                     __ptext6 1040                     __ptext7 1164  
                   __ptext8 16CE                     __ptext9 16EE                   _T0CONbits 000FD5  
              __size_of_ISR 15E8            ___awmod@dividend 0001            ___aldiv@dividend 0019  
          ?_TMR0_configurar 0001              __pintcode_body 157A        end_of_initialization 1674  
             __Lmediumconst 0000                     int_func 157A     __end_of_initialize_TMR0 16E4  
          ___aldiv@quotient 0023                     postdec1 000FE5                     postinc0 000FEE  
                 _UART_Init 1040              UART_Write@data 0019                   _TRISAbits 000F92  
                 _TRISCbits 000F94        __end_ofi2_UART_Write 16CE                  ?_UART_Init 0027  
             __pidataCOMRAM 16F6    __size_of_UART_Write_Text 0082         start_initialization 1648  
               __end_of_ISR 15F0        __size_of_turn_on_ADC 0004     __size_of_ADC_configurar 0020  
          ?_initialize_TMR0 0001             _PORT_configurar 16EE                 __pbssCOMRAM 0035  
         i2_UART_Write_Text 14F8          ?i2_UART_Write_Text 0002       i2UART_Write_Text@text 0002  
       ??i2_UART_Write_Text 0004                   __pintcode 0008                    ?___aldiv 0019  
                  ?___awdiv 0007                    ?___awmod 0001                 ??_UART_Init 002B  
 __end_ofi2_UART_Write_Text 157A                 __smallconst 1000                   _int_2_str 13E4  
   __end_of_PORT_configurar 16F6                  UART_Init@x 0033           ??_UART_Write_Text 001C  
           ___aldiv@divisor 001D             ___aldiv@counter 0021       __size_ofi2_UART_Write 0016  
             ?_turn_on_TMR0 0001                    _PIE1bits 000F9D           UART_Init@baudrate 0027  
                _ADCON0bits 000FC2                  _ADCON1bits 000FC1                  _ADCON2bits 000FC0  
                ?_int_2_str 000F                i2_UART_Write 16B8              _ADC_configurar 1682  
                 copy_data0 165C              ??_turn_on_TMR0 0019    __size_of_TMR0_configurar 000C  
                  __Hrparam 0000               _num_as_string 0050                    __Lrparam 0000  
          __size_of___aldiv 010C            __size_of___awdiv 00C4            __size_of___awmod 00B0  
__size_ofi2_UART_Write_Text 0082      __end_of_ADC_configurar 16A2                    __ptext10 1682  
                  __ptext12 16E4                    __ptext13 14F8                    __ptext14 16B8  
                  __ptext15 13E4                    __ptext16 1334                    __ptext17 1270  
          ?_PORT_configurar 0001         UART_Write_Text@text 001A               __size_of_main 0058  
                  int$flags 0057               ??_turn_on_ADC 0019                 ??_int_2_str 0011  
                _INTCONbits 000FF2             ?_ADC_configurar 0001                    intlevel2 0000  
         ??_TMR0_configurar 0019    __size_of_initialize_TMR0 000A             _UART_Write_Text 1476  
      __end_of_turn_on_TMR0 1702                ___aldiv@sign 0022                  _UART_Write 16A2  
       __end_of_turn_on_ADC 1706            UART_Write_Text@i 001E  
